<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace表示命名空间 -->
<mapper namespace="com.usts.lem.dao.IEquipmentDao">

    <resultMap type="com.usts.lem.model.Equipment" id="EquipmentResult">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="serialNumber" jdbcType="VARCHAR" property="serialNumber"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="spec" jdbcType="VARCHAR" property="spec"/>
        <result column="unitPrice" jdbcType="DOUBLE" property="unitPrice"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
        <result column="manufacture" jdbcType="VARCHAR" property="manufacture"/>
        <result column="purchaseDate" jdbcType="TIMESTAMP" property="purchaseDate"/>
        <result column="manager" jdbcType="VARCHAR" property="manager"/>
        <result column="eState" jdbcType="INTEGER" property="eState"/>
    </resultMap>

    <insert id="insert" parameterType="com.usts.lem.model.Equipment"
            useGeneratedKeys="true" keyProperty="id">
        insert into equipment(serialNumber, type, name,
                              spec, unitPrice, amount, manufacture,
                              purchaseDate, manager, eState)
        values (#{serialNumber}, #{type}, #{name}, #{spec},
                #{unitPrice}, #{amount}, #{manufacture},
                #{purchaseDate}, #{manager}, #{eState})
    </insert>

    <select id="countSpec" resultType="Integer" parameterType="String">
        select COUNT(*)
        from equipment
        where spec = #{spec}
          and eState = 1
    </select>

    <select id="count" resultType="Integer">
        select COUNT(*)
        from equipment
        where eState = 1
    </select>

    <update id="update" parameterType="com.usts.lem.model.Equipment">
        update equipment
        set serialNumber=#{serialNumber},
            type=#{type},
            name=#{name},
            spec=#{spec},
            unitPrice=#{unitPrice},
            amount=#{amount},
            manufacture=#{manufacture},
            purchaseDate=#{purchaseDate},
            manager=#{manager},
            eState=#{eState}
        where id = #{id}
    </update>

    <select id="findAllData" resultMap="EquipmentResult"
            parameterType="Integer">
        select *
        from equipment
        where eState = 1
        order by ${sort} ${order}
        limit #{offset},#{rows}

    </select>

    <select id="findBySerialNumber" resultMap="EquipmentResult"
            parameterType="String">
        select *
        from equipment
        where serialNumber = #{serialNumber}
          and eState = 1
    </select>

    <select id="fuzzSearch" resultMap="EquipmentResult"
            parameterType="String">
        select *
        from equipment
        where name like concat('%', #{keyWord}, '%')
           or manager like concat('%', #{keyWord}, '%')
           or type like concat('%', #{keyWord}, '%')
           or spec like concat('%', #{keyWord}, '%')
           or manufacture like concat('%', #{keyWord}, '%')
           or serialNumber like concat('%', #{keyWord}, '%')
    </select>

    <delete id="delete" parameterType="Integer">
        delete
        from equipment
        where id = #{id}
    </delete>

    <select id="findById" resultMap="EquipmentResult"
            parameterType="Integer">
        select *
        from equipment
        where id = #{id}
    </select>


</mapper>